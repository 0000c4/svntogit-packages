From 6c546a4fe86f3066545b7a8bb2900c19a66f9a2f Mon Sep 17 00:00:00 2001
Message-Id: <6c546a4fe86f3066545b7a8bb2900c19a66f9a2f.1513772933.git.jan.steffens@gmail.com>
From: "Jan Alexander Steffens (heftig)" <jan.steffens@gmail.com>
Date: Wed, 20 Dec 2017 13:23:12 +0100
Subject: [PATCH] shared/compat: Fix memory handling of
 nm_setting_vpn_get_*_keys

The compat implementations return a (transfer none) strv instead of a
(transfer container) one. This has caused double frees in nm-applet:
https://bugs.archlinux.org/task/56772

Don't copy the keys and don't free the container later.
---
 shared/nm-utils/nm-compat.c | 10 +---------
 1 file changed, 1 insertion(+), 9 deletions(-)

diff --git a/shared/nm-utils/nm-compat.c b/shared/nm-utils/nm-compat.c
index 22ab675de8373639..22c31489dd222cd3 100644
--- a/shared/nm-utils/nm-compat.c
+++ b/shared/nm-utils/nm-compat.c
@@ -30,39 +30,31 @@ _get_keys_cb (const char *key, const char *val, gpointer user_data)
 {
 	GPtrArray *a = user_data;
 
-	g_ptr_array_add (a, g_strdup (key));
+	g_ptr_array_add (a, key);
 }
 
 static const char **
 _get_keys (NMSettingVpn *setting,
            gboolean is_secrets,
            guint *out_length)
 {
 	guint len;
 	const char **keys = NULL;
 	gs_unref_ptrarray GPtrArray *a = NULL;
 
 	nm_assert (NM_IS_SETTING_VPN (setting));
 
 	a = g_ptr_array_new ();
 	if (is_secrets)
 		nm_setting_vpn_foreach_secret (setting, _get_keys_cb, a);
 	else
 		nm_setting_vpn_foreach_data_item (setting, _get_keys_cb, a);
 	len = a->len;
 
 	if (a->len) {
 		g_ptr_array_sort (a, nm_strcmp_p);
 		g_ptr_array_add (a, NULL);
 		keys = (const char **) g_ptr_array_free (g_steal_pointer (&a), FALSE);
-
-		/* we need to cache the keys *somewhere*. */
-		g_object_set_qdata_full (G_OBJECT (setting),
-		                         is_secrets
-		                         ? NM_CACHED_QUARK ("libnm._nm_setting_vpn_get_secret_keys")
-		                         : NM_CACHED_QUARK ("libnm._nm_setting_vpn_get_data_keys"),
-		                         keys,
-		                         (GDestroyNotify) g_strfreev);
 	}
 
 	NM_SET_OUT (out_length, len);
-- 
2.15.1


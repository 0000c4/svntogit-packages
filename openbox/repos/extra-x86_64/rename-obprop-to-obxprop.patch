diff -Naur openbox-3.4.9~/data/rc.xml openbox-3.4.9/data/rc.xml
--- openbox-3.4.9~/data/rc.xml	2009-12-24 18:35:01.761606125 +0100
+++ openbox-3.4.9/data/rc.xml	2009-12-24 18:37:06.894918945 +0100
@@ -629,9 +629,9 @@
   # this is an example with comments through out. use these to make your
   # own rules, but without the comments of course.
 
-  <application name="the window's _OB_NAME property (see obprop)"
-              class="the window's _OB_CLASS property (see obprop)"
-               role="the window's _OB_ROLE property (see obprop)"
+  <application name="the window's _OB_NAME property (see obxprop)"
+              class="the window's _OB_CLASS property (see obxprop)"
+               role="the window's _OB_ROLE property (see obxprop)"
                type="the window's _NET_WM_WINDOW_TYPE (see obprob)..
                       (if unspecified, then it is 'dialog' for child windows)">
   # the name or the class can be set, or both. this is used to match
diff -Naur openbox-3.4.9~/Makefile.am openbox-3.4.9/Makefile.am
--- openbox-3.4.9~/Makefile.am	2009-12-24 18:35:01.758271064 +0100
+++ openbox-3.4.9/Makefile.am	2009-12-24 18:37:02.718252718 +0100
@@ -33,7 +33,7 @@
 	openbox/openbox \
 	tools/gdm-control/gdm-control \
 	tools/gnome-panel-control/gnome-panel-control \
-	tools/obprop/obprop
+	tools/obxprop/obxprop
 
 dist_secretbin_SCRIPTS = \
 	tools/xdg-autostart/xdg-autostart
@@ -289,16 +289,16 @@
 tools_gnome_panel_control_gnome_panel_control_SOURCES = \
 	tools/gnome-panel-control/gnome-panel-control.c
 
-## obprop ##
+## obxprop ##
 
-tools_obprop_obprop_CPPFLAGS = \
+tools_obxprop_obxprop_CPPFLAGS = \
 	$(GLIB_CFLAGS) \
 	$(X_CFLAGS)
-tools_obprop_obprop_LDADD = \
+tools_obxprop_obxprop_LDADD = \
 	$(GLIB_LIBS) \
 	$(X_LIBS)
-tools_obprop_obprop_SOURCES = \
-	tools/obprop/obprop.c
+tools_obxprop_obxprop_SOURCES = \
+	tools/obxprop/obxprop.c
 
 ## gdm-control ##
 
diff -Naur openbox-3.4.9~/Makefile.in openbox-3.4.9/Makefile.in
--- openbox-3.4.9~/Makefile.in	2009-12-24 18:35:01.768271496 +0100
+++ openbox-3.4.9/Makefile.in	2009-12-24 18:37:02.741586060 +0100
@@ -40,7 +40,7 @@
 bin_PROGRAMS = openbox/openbox$(EXEEXT) \
 	tools/gdm-control/gdm-control$(EXEEXT) \
 	tools/gnome-panel-control/gnome-panel-control$(EXEEXT) \
-	tools/obprop/obprop$(EXEEXT)
+	tools/obxprop/obxprop$(EXEEXT)
 subdir = .
 DIST_COMMON = README $(am__configure_deps) $(dist_apps_DATA) \
 	$(dist_artwizboxed_theme_DATA) $(dist_bear2_theme_DATA) \
@@ -234,10 +234,10 @@
 	$(am_tools_gnome_panel_control_gnome_panel_control_OBJECTS)
 tools_gnome_panel_control_gnome_panel_control_DEPENDENCIES =  \
 	$(am__DEPENDENCIES_1)
-am_tools_obprop_obprop_OBJECTS =  \
-	tools/obprop/tools_obprop_obprop-obprop.$(OBJEXT)
-tools_obprop_obprop_OBJECTS = $(am_tools_obprop_obprop_OBJECTS)
-tools_obprop_obprop_DEPENDENCIES = $(am__DEPENDENCIES_1) \
+am_tools_obxprop_obxprop_OBJECTS =  \
+	tools/obxprop/tools_obxprop_obxprop-obxprop.$(OBJEXT)
+tools_obxprop_obxprop_OBJECTS = $(am_tools_obxprop_obxprop_OBJECTS)
+tools_obxprop_obxprop_DEPENDENCIES = $(am__DEPENDENCIES_1) \
 	$(am__DEPENDENCIES_1)
 dist_secretbinSCRIPT_INSTALL = $(INSTALL_SCRIPT)
 nodist_binSCRIPT_INSTALL = $(INSTALL_SCRIPT)
@@ -259,13 +259,13 @@
 	$(render_rendertest_SOURCES) \
 	$(tools_gdm_control_gdm_control_SOURCES) \
 	$(tools_gnome_panel_control_gnome_panel_control_SOURCES) \
-	$(tools_obprop_obprop_SOURCES)
+	$(tools_obxprop_obxprop_SOURCES)
 DIST_SOURCES = $(parser_libobparser_la_SOURCES) \
 	$(render_libobrender_la_SOURCES) $(openbox_openbox_SOURCES) \
 	$(render_rendertest_SOURCES) \
 	$(tools_gdm_control_gdm_control_SOURCES) \
 	$(tools_gnome_panel_control_gnome_panel_control_SOURCES) \
-	$(tools_obprop_obprop_SOURCES)
+	$(tools_obxprop_obxprop_SOURCES)
 RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
 	html-recursive info-recursive install-data-recursive \
 	install-dvi-recursive install-exec-recursive \
@@ -768,16 +768,16 @@
 tools_gnome_panel_control_gnome_panel_control_SOURCES = \
 	tools/gnome-panel-control/gnome-panel-control.c
 
-tools_obprop_obprop_CPPFLAGS = \
+tools_obxprop_obxprop_CPPFLAGS = \
 	$(GLIB_CFLAGS) \
 	$(X_CFLAGS)
 
-tools_obprop_obprop_LDADD = \
+tools_obxprop_obxprop_LDADD = \
 	$(GLIB_LIBS) \
 	$(X_LIBS)
 
-tools_obprop_obprop_SOURCES = \
-	tools/obprop/obprop.c
+tools_obxprop_obxprop_SOURCES = \
+	tools/obxprop/obxprop.c
 
 tools_gdm_control_gdm_control_CPPFLAGS = \
 	$(X_CFLAGS) \
@@ -1373,18 +1373,18 @@
 tools/gnome-panel-control/gnome-panel-control$(EXEEXT): $(tools_gnome_panel_control_gnome_panel_control_OBJECTS) $(tools_gnome_panel_control_gnome_panel_control_DEPENDENCIES) tools/gnome-panel-control/$(am__dirstamp)
 	@rm -f tools/gnome-panel-control/gnome-panel-control$(EXEEXT)
 	$(LINK) $(tools_gnome_panel_control_gnome_panel_control_OBJECTS) $(tools_gnome_panel_control_gnome_panel_control_LDADD) $(LIBS)
-tools/obprop/$(am__dirstamp):
-	@$(MKDIR_P) tools/obprop
-	@: > tools/obprop/$(am__dirstamp)
-tools/obprop/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) tools/obprop/$(DEPDIR)
-	@: > tools/obprop/$(DEPDIR)/$(am__dirstamp)
-tools/obprop/tools_obprop_obprop-obprop.$(OBJEXT):  \
-	tools/obprop/$(am__dirstamp) \
-	tools/obprop/$(DEPDIR)/$(am__dirstamp)
-tools/obprop/obprop$(EXEEXT): $(tools_obprop_obprop_OBJECTS) $(tools_obprop_obprop_DEPENDENCIES) tools/obprop/$(am__dirstamp)
-	@rm -f tools/obprop/obprop$(EXEEXT)
-	$(LINK) $(tools_obprop_obprop_OBJECTS) $(tools_obprop_obprop_LDADD) $(LIBS)
+tools/obxprop/$(am__dirstamp):
+	@$(MKDIR_P) tools/obxprop
+	@: > tools/obxprop/$(am__dirstamp)
+tools/obxprop/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) tools/obxprop/$(DEPDIR)
+	@: > tools/obxprop/$(DEPDIR)/$(am__dirstamp)
+tools/obxprop/tools_obxprop_obxprop-obxprop.$(OBJEXT):  \
+	tools/obxprop/$(am__dirstamp) \
+	tools/obxprop/$(DEPDIR)/$(am__dirstamp)
+tools/obxprop/obxprop$(EXEEXT): $(tools_obxprop_obxprop_OBJECTS) $(tools_obxprop_obxprop_DEPENDENCIES) tools/obxprop/$(am__dirstamp)
+	@rm -f tools/obxprop/obxprop$(EXEEXT)
+	$(LINK) $(tools_obxprop_obxprop_OBJECTS) $(tools_obxprop_obxprop_LDADD) $(LIBS)
 install-dist_secretbinSCRIPTS: $(dist_secretbin_SCRIPTS)
 	@$(NORMAL_INSTALL)
 	test -z "$(secretbindir)" || $(MKDIR_P) "$(DESTDIR)$(secretbindir)"
@@ -1526,7 +1526,7 @@
 	-rm -f render/render_rendertest-test.$(OBJEXT)
 	-rm -f tools/gdm-control/tools_gdm_control_gdm_control-gdm-control.$(OBJEXT)
 	-rm -f tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.$(OBJEXT)
-	-rm -f tools/obprop/tools_obprop_obprop-obprop.$(OBJEXT)
+	-rm -f tools/obxprop/tools_obxprop_obxprop-obxprop.$(OBJEXT)
 
 distclean-compile:
 	-rm -f *.tab.c
@@ -1621,7 +1621,7 @@
 @AMDEP_TRUE@@am__include@ @am__quote@render/$(DEPDIR)/render_rendertest-test.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tools/gdm-control/$(DEPDIR)/tools_gdm_control_gdm_control-gdm-control.Po@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@tools/gnome-panel-control/$(DEPDIR)/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.Po@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@tools/obprop/$(DEPDIR)/tools_obprop_obprop-obprop.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Po@am__quote@
 
 .c.o:
 @am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@@ -2837,19 +2837,19 @@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_gnome_panel_control_gnome_panel_control_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/gnome-panel-control/tools_gnome_panel_control_gnome_panel_control-gnome-panel-control.obj `if test -f 'tools/gnome-panel-control/gnome-panel-control.c'; then $(CYGPATH_W) 'tools/gnome-panel-control/gnome-panel-control.c'; else $(CYGPATH_W) '$(srcdir)/tools/gnome-panel-control/gnome-panel-control.c'; fi`
 
-tools/obprop/tools_obprop_obprop-obprop.o: tools/obprop/obprop.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obprop_obprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/obprop/tools_obprop_obprop-obprop.o -MD -MP -MF tools/obprop/$(DEPDIR)/tools_obprop_obprop-obprop.Tpo -c -o tools/obprop/tools_obprop_obprop-obprop.o `test -f 'tools/obprop/obprop.c' || echo '$(srcdir)/'`tools/obprop/obprop.c
-@am__fastdepCC_TRUE@	mv -f tools/obprop/$(DEPDIR)/tools_obprop_obprop-obprop.Tpo tools/obprop/$(DEPDIR)/tools_obprop_obprop-obprop.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tools/obprop/obprop.c' object='tools/obprop/tools_obprop_obprop-obprop.o' libtool=no @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obprop_obprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/obprop/tools_obprop_obprop-obprop.o `test -f 'tools/obprop/obprop.c' || echo '$(srcdir)/'`tools/obprop/obprop.c
-
-tools/obprop/tools_obprop_obprop-obprop.obj: tools/obprop/obprop.c
-@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obprop_obprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/obprop/tools_obprop_obprop-obprop.obj -MD -MP -MF tools/obprop/$(DEPDIR)/tools_obprop_obprop-obprop.Tpo -c -o tools/obprop/tools_obprop_obprop-obprop.obj `if test -f 'tools/obprop/obprop.c'; then $(CYGPATH_W) 'tools/obprop/obprop.c'; else $(CYGPATH_W) '$(srcdir)/tools/obprop/obprop.c'; fi`
-@am__fastdepCC_TRUE@	mv -f tools/obprop/$(DEPDIR)/tools_obprop_obprop-obprop.Tpo tools/obprop/$(DEPDIR)/tools_obprop_obprop-obprop.Po
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tools/obprop/obprop.c' object='tools/obprop/tools_obprop_obprop-obprop.obj' libtool=no @AMDEPBACKSLASH@
+tools/obxprop/tools_obxprop_obxprop-obxprop.o: tools/obxprop/obxprop.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obxprop_obxprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/obxprop/tools_obxprop_obxprop-obxprop.o -MD -MP -MF tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo -c -o tools/obxprop/tools_obxprop_obxprop-obxprop.o `test -f 'tools/obxprop/obxprop.c' || echo '$(srcdir)/'`tools/obxprop/obxprop.c
+@am__fastdepCC_TRUE@	mv -f tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tools/obxprop/obxprop.c' object='tools/obxprop/tools_obxprop_obxprop-obxprop.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obxprop_obxprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/obxprop/tools_obxprop_obxprop-obxprop.o `test -f 'tools/obxprop/obxprop.c' || echo '$(srcdir)/'`tools/obxprop/obxprop.c
+
+tools/obxprop/tools_obxprop_obxprop-obxprop.obj: tools/obxprop/obxprop.c
+@am__fastdepCC_TRUE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obxprop_obxprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tools/obxprop/tools_obxprop_obxprop-obxprop.obj -MD -MP -MF tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo -c -o tools/obxprop/tools_obxprop_obxprop-obxprop.obj `if test -f 'tools/obxprop/obxprop.c'; then $(CYGPATH_W) 'tools/obxprop/obxprop.c'; else $(CYGPATH_W) '$(srcdir)/tools/obxprop/obxprop.c'; fi`
+@am__fastdepCC_TRUE@	mv -f tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Tpo tools/obxprop/$(DEPDIR)/tools_obxprop_obxprop-obxprop.Po
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='tools/obxprop/obxprop.c' object='tools/obxprop/tools_obxprop_obxprop-obxprop.obj' libtool=no @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obprop_obprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/obprop/tools_obprop_obprop-obprop.obj `if test -f 'tools/obprop/obprop.c'; then $(CYGPATH_W) 'tools/obprop/obprop.c'; else $(CYGPATH_W) '$(srcdir)/tools/obprop/obprop.c'; fi`
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tools_obxprop_obxprop_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tools/obxprop/tools_obxprop_obxprop-obxprop.obj `if test -f 'tools/obxprop/obxprop.c'; then $(CYGPATH_W) 'tools/obxprop/obxprop.c'; else $(CYGPATH_W) '$(srcdir)/tools/obxprop/obxprop.c'; fi`
 
 mostlyclean-libtool:
 	-rm -f *.lo
@@ -2861,7 +2861,7 @@
 	-rm -rf render/.libs render/_libs
 	-rm -rf tools/gdm-control/.libs tools/gdm-control/_libs
 	-rm -rf tools/gnome-panel-control/.libs tools/gnome-panel-control/_libs
-	-rm -rf tools/obprop/.libs tools/obprop/_libs
+	-rm -rf tools/obxprop/.libs tools/obxprop/_libs
 
 distclean-libtool:
 	-rm -f libtool
@@ -3608,8 +3608,8 @@
 	-rm -f tools/gdm-control/$(am__dirstamp)
 	-rm -f tools/gnome-panel-control/$(DEPDIR)/$(am__dirstamp)
 	-rm -f tools/gnome-panel-control/$(am__dirstamp)
-	-rm -f tools/obprop/$(DEPDIR)/$(am__dirstamp)
-	-rm -f tools/obprop/$(am__dirstamp)
+	-rm -f tools/obxprop/$(DEPDIR)/$(am__dirstamp)
+	-rm -f tools/obxprop/$(am__dirstamp)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
@@ -3621,7 +3621,7 @@
 
 distclean: distclean-recursive
 	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
-	-rm -rf openbox/$(DEPDIR) openbox/actions/$(DEPDIR) parser/$(DEPDIR) render/$(DEPDIR) tools/gdm-control/$(DEPDIR) tools/gnome-panel-control/$(DEPDIR) tools/obprop/$(DEPDIR)
+	-rm -rf openbox/$(DEPDIR) openbox/actions/$(DEPDIR) parser/$(DEPDIR) render/$(DEPDIR) tools/gdm-control/$(DEPDIR) tools/gnome-panel-control/$(DEPDIR) tools/obxprop/$(DEPDIR)
 	-rm -f Makefile
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-libtool distclean-local distclean-tags
@@ -3672,7 +3672,7 @@
 maintainer-clean: maintainer-clean-recursive
 	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
 	-rm -rf $(top_srcdir)/autom4te.cache
-	-rm -rf openbox/$(DEPDIR) openbox/actions/$(DEPDIR) parser/$(DEPDIR) render/$(DEPDIR) tools/gdm-control/$(DEPDIR) tools/gnome-panel-control/$(DEPDIR) tools/obprop/$(DEPDIR)
+	-rm -rf openbox/$(DEPDIR) openbox/actions/$(DEPDIR) parser/$(DEPDIR) render/$(DEPDIR) tools/gdm-control/$(DEPDIR) tools/gnome-panel-control/$(DEPDIR) tools/obxprop/$(DEPDIR)
 	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
diff -Naur openbox-3.4.9~/tools/obprop/obprop.c openbox-3.4.9/tools/obprop/obprop.c
--- openbox-3.4.9~/tools/obprop/obprop.c	2009-12-24 18:35:01.758271064 +0100
+++ openbox-3.4.9/tools/obprop/obprop.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,320 +0,0 @@
-#include <X11/Xlib.h>
-#include <X11/cursorfont.h>
-#include <stdlib.h>
-#include <string.h>
-#include <stdio.h>
-#include <assert.h>
-#include <glib.h>
-
-gint fail(const gchar *s) {
-    if (s)
-        fprintf(stderr, "%s\n", s);
-    else
-        fprintf
-            (stderr,
-             "Usage: obprop [OPTIONS]\n\n"
-             "Options:\n"
-             "    --help              Display this help and exit\n"
-             "    --display DISPLAY   Connect to this X display\n"
-             "    --id ID             Show the properties for this window\n");
-    return 1;
-}
-
-gint parse_hex(gchar *s) {
-    gint result = 0;
-    while (*s) {
-        gint add;
-        if (*s >= '0' && *s <='9')
-            add = *s-'0';
-        else if (*s >= 'A' && *s <='F')
-            add = *s-'A';
-        else if (*s >= 'a' && *s <='f')
-            add = *s-'a';
-        else
-            break;
-
-        result *= 16;
-        result += add;
-    }
-    return result;
-}
-
-Window find_client(Display *d, Window win)
-{
-    Window r, *children;
-    guint n, i;
-    Atom state = XInternAtom(d, "WM_STATE", True);
-    Atom ret_type;
-    gint ret_format, res;
-    gulong ret_items, ret_bytesleft, *xdata;
-
-    XQueryTree(d, win, &r, &r, &children, &n);
-    for (i = 0; i < n; ++i) {
-        Window w = find_client(d, children[i]);
-        if (w) return w;
-    }
-
-    // try me
-    res = XGetWindowProperty(d, win, state, 0, 1,
-                       False, state, &ret_type, &ret_format,
-                       &ret_items, &ret_bytesleft,
-                       (unsigned char**) &xdata);
-    XFree(xdata);
-    if (res != Success || ret_type == None || ret_items < 1)
-        return None;
-    return win; // found it!
-}
-
-static gboolean get_all(Display *d, Window win, Atom prop,
-                        Atom *type, gint *size,
-                        guchar **data, guint *num)
-{
-    gboolean ret = FALSE;
-    gint res;
-    guchar *xdata = NULL;
-    gulong ret_items, bytes_left;
-
-    res = XGetWindowProperty(d, win, prop, 0l, G_MAXLONG,
-                             FALSE, AnyPropertyType, type, size,
-                             &ret_items, &bytes_left, &xdata);
-    if (res == Success) {
-        if (ret_items > 0) {
-            guint i;
-
-            *data = g_malloc(ret_items * (*size / 8));
-            for (i = 0; i < ret_items; ++i)
-                switch (*size) {
-                case 8:
-                    (*data)[i] = xdata[i];
-                    break;
-                case 16:
-                    ((guint16*)*data)[i] = ((gushort*)xdata)[i];
-                    break;
-                case 32:
-                    ((guint32*)*data)[i] = ((gulong*)xdata)[i];
-                    break;
-                default:
-                    g_assert_not_reached(); /* unhandled size */
-                }
-            *num = ret_items;
-            ret = TRUE;
-        }
-        XFree(xdata);
-    }
-    return ret;
-}
-
-gchar *append_string(gchar *before, gchar *after, gboolean quote)
-{
-    gchar *tmp;
-    const gchar *q = quote ? "\"" : "";
-    if (before)
-        tmp = g_strdup_printf("%s, %s%s%s", before, q, after, q);
-    else
-        tmp = g_strdup_printf("%s%s%s", q, after, q);
-    g_free(before);
-    return tmp;
-}
-
-gchar *append_int(gchar *before, guint after)
-{
-    gchar *tmp;
-    if (before)
-        tmp = g_strdup_printf("%s, %u", before, after);
-    else
-        tmp = g_strdup_printf("%u", after);
-    g_free(before);
-    return tmp;
-}
-
-gchar* read_strings(gchar *val, guint n, gboolean utf8)
-{
-    GSList *strs = NULL, *it;
-    gchar *ret, *p;
-    guint i;
-
-    p = val;
-    while (p < val + n) {
-        strs = g_slist_append(strs, g_strndup(p, n - (p - val)));
-        p += strlen(p) + 1; /* next string */
-    }
-
-    ret = NULL;
-    for (i = 0, it = strs; it; ++i, it = g_slist_next(it)) {
-        char *data;
-
-        if (utf8) {
-            if (g_utf8_validate(it->data, -1, NULL))
-                data = g_strdup(it->data);
-            else
-                data = g_strdup("");
-        }
-        else
-            data = g_locale_to_utf8(it->data, -1, NULL, NULL, NULL);
-
-        ret = append_string(ret, data, TRUE);
-        g_free(data);
-    }
-
-    while (strs) {
-        g_free(strs->data);
-        strs = g_slist_delete_link(strs, strs);
-    }
-    return ret;
-}
-
-gchar* read_atoms(Display *d, guchar *val, guint n)
-{
-    gchar *ret;
-    guint i;
-
-    ret = NULL;
-    for (i = 0; i < n; ++i)
-        ret = append_string(ret, XGetAtomName(d, ((guint32*)val)[i]), FALSE);
-    return ret;
-}
-
-gchar* read_numbers(guchar *val, guint n, guint size)
-{
-    gchar *ret;
-    guint i;
-
-    ret = NULL;
-    for (i = 0; i < n; ++i)
-        switch (size) {
-        case 8:
-            ret = append_int(ret, ((guint8*)val)[i]);
-            break;
-        case 16:
-            ret = append_int(ret, ((guint16*)val)[i]);
-            break;
-        case 32:
-            ret = append_int(ret, ((guint32*)val)[i]);
-            break;
-        default:
-            g_assert_not_reached(); /* unhandled size */
-        }
-
-    return ret;
-}
-
-gboolean read_prop(Display *d, Window w, Atom prop, const gchar **type, gchar **val)
-{
-    guchar *ret;
-    guint nret;
-    gint size;
-    Atom ret_type;
-
-    ret = NULL;
-    if (get_all(d, w, prop, &ret_type, &size, &ret, &nret)) {
-        *type = XGetAtomName(d, ret_type);
-
-        if (strcmp(*type, "STRING") == 0)
-            *val = read_strings((gchar*)ret, nret, FALSE);
-        else if (strcmp(*type, "UTF8_STRING") == 0)
-            *val = read_strings((gchar*)ret, nret, TRUE);
-        else if (strcmp(*type, "ATOM") == 0) {
-            g_assert(size == 32);
-            *val = read_atoms(d, ret, nret);
-        }
-       else
-            *val = read_numbers(ret, nret, size);
-
-        g_free(ret);
-        return TRUE;
-    }
-    return FALSE;
-}
-
-void show_properties(Display *d, Window w)
-{
-    Atom* props;
-    int i, n;
-
-    props = XListProperties(d, w, &n);
-
-    for (i = 0; i < n; ++i) {
-        const char *type;
-        char *name, *val;
-
-        name = XGetAtomName(d, props[i]);
-
-        if (read_prop(d, w, props[i], &type, &val)) {
-            g_print("%s(%s) = %s\n", name, type, val);
-            g_free(val);
-        }
-
-        XFree(name);
-    }
-
-    XFree(props);
-}
-
-int main(int argc, char **argv)
-{
-    Display *d;
-    Window id, userid = None;
-    int i;
-    char *dname = NULL;
-
-    for (i = 1; i < argc; ++i) {
-        if (!strcmp(argv[i], "--help")) {
-            return fail(0);
-        }
-        else if (!strcmp(argv[i], "--id")) {
-            if (++i == argc)
-                return fail(0);
-            if (argv[i][0] == '0' && argv[i][1] == 'x') {
-                /* hex */
-                userid = parse_hex(argv[i]+2);
-            }
-            else {
-                /* decimal */
-                userid = atoi(argv[i]);
-            }
-            break;
-        }
-        else if (!strcmp(argv[i], "--display")) {
-            if (++i == argc)
-                return fail(0);
-            dname = argv[i];
-        }
-    }
-
-    d = XOpenDisplay(dname);
-    if (!d) {
-        return fail("Unable to find an X display. "
-                    "Ensure you have permission to connect to the display.");
-    }
-
-    if (userid == None) {
-        i = XGrabPointer(d, RootWindow(d, DefaultScreen(d)),
-                         False, ButtonPressMask,
-                         GrabModeAsync, GrabModeAsync,
-                         None, XCreateFontCursor(d, XC_crosshair),
-                         CurrentTime);
-        if (i != GrabSuccess)
-            return fail("Unable to grab the pointer device");
-        while (1) {
-            XEvent ev;
-
-            XNextEvent(d, &ev);
-            if (ev.type == ButtonPress) {
-                XUngrabPointer(d, CurrentTime);
-                userid = ev.xbutton.subwindow;
-                break;
-            }
-        }
-    }
-
-    id = find_client(d, userid);
-
-    if (id == None)
-        return fail("Unable to find window with the requested ID");
-
-    show_properties(d, id);
-    
-    XCloseDisplay(d);
-
-    return 0;
-}
diff -Naur openbox-3.4.9~/tools/obxprop/obxprop.c openbox-3.4.9/tools/obxprop/obxprop.c
--- openbox-3.4.9~/tools/obxprop/obxprop.c	1970-01-01 01:00:00.000000000 +0100
+++ openbox-3.4.9/tools/obxprop/obxprop.c	2009-12-24 18:34:45.091608618 +0100
@@ -0,0 +1,320 @@
+#include <X11/Xlib.h>
+#include <X11/cursorfont.h>
+#include <stdlib.h>
+#include <string.h>
+#include <stdio.h>
+#include <assert.h>
+#include <glib.h>
+
+gint fail(const gchar *s) {
+    if (s)
+        fprintf(stderr, "%s\n", s);
+    else
+        fprintf
+            (stderr,
+             "Usage: obxprop [OPTIONS]\n\n"
+             "Options:\n"
+             "    --help              Display this help and exit\n"
+             "    --display DISPLAY   Connect to this X display\n"
+             "    --id ID             Show the properties for this window\n");
+    return 1;
+}
+
+gint parse_hex(gchar *s) {
+    gint result = 0;
+    while (*s) {
+        gint add;
+        if (*s >= '0' && *s <='9')
+            add = *s-'0';
+        else if (*s >= 'A' && *s <='F')
+            add = *s-'A';
+        else if (*s >= 'a' && *s <='f')
+            add = *s-'a';
+        else
+            break;
+
+        result *= 16;
+        result += add;
+    }
+    return result;
+}
+
+Window find_client(Display *d, Window win)
+{
+    Window r, *children;
+    guint n, i;
+    Atom state = XInternAtom(d, "WM_STATE", True);
+    Atom ret_type;
+    gint ret_format, res;
+    gulong ret_items, ret_bytesleft, *xdata;
+
+    XQueryTree(d, win, &r, &r, &children, &n);
+    for (i = 0; i < n; ++i) {
+        Window w = find_client(d, children[i]);
+        if (w) return w;
+    }
+
+    // try me
+    res = XGetWindowProperty(d, win, state, 0, 1,
+                       False, state, &ret_type, &ret_format,
+                       &ret_items, &ret_bytesleft,
+                       (unsigned char**) &xdata);
+    XFree(xdata);
+    if (res != Success || ret_type == None || ret_items < 1)
+        return None;
+    return win; // found it!
+}
+
+static gboolean get_all(Display *d, Window win, Atom prop,
+                        Atom *type, gint *size,
+                        guchar **data, guint *num)
+{
+    gboolean ret = FALSE;
+    gint res;
+    guchar *xdata = NULL;
+    gulong ret_items, bytes_left;
+
+    res = XGetWindowProperty(d, win, prop, 0l, G_MAXLONG,
+                             FALSE, AnyPropertyType, type, size,
+                             &ret_items, &bytes_left, &xdata);
+    if (res == Success) {
+        if (ret_items > 0) {
+            guint i;
+
+            *data = g_malloc(ret_items * (*size / 8));
+            for (i = 0; i < ret_items; ++i)
+                switch (*size) {
+                case 8:
+                    (*data)[i] = xdata[i];
+                    break;
+                case 16:
+                    ((guint16*)*data)[i] = ((gushort*)xdata)[i];
+                    break;
+                case 32:
+                    ((guint32*)*data)[i] = ((gulong*)xdata)[i];
+                    break;
+                default:
+                    g_assert_not_reached(); /* unhandled size */
+                }
+            *num = ret_items;
+            ret = TRUE;
+        }
+        XFree(xdata);
+    }
+    return ret;
+}
+
+gchar *append_string(gchar *before, gchar *after, gboolean quote)
+{
+    gchar *tmp;
+    const gchar *q = quote ? "\"" : "";
+    if (before)
+        tmp = g_strdup_printf("%s, %s%s%s", before, q, after, q);
+    else
+        tmp = g_strdup_printf("%s%s%s", q, after, q);
+    g_free(before);
+    return tmp;
+}
+
+gchar *append_int(gchar *before, guint after)
+{
+    gchar *tmp;
+    if (before)
+        tmp = g_strdup_printf("%s, %u", before, after);
+    else
+        tmp = g_strdup_printf("%u", after);
+    g_free(before);
+    return tmp;
+}
+
+gchar* read_strings(gchar *val, guint n, gboolean utf8)
+{
+    GSList *strs = NULL, *it;
+    gchar *ret, *p;
+    guint i;
+
+    p = val;
+    while (p < val + n) {
+        strs = g_slist_append(strs, g_strndup(p, n - (p - val)));
+        p += strlen(p) + 1; /* next string */
+    }
+
+    ret = NULL;
+    for (i = 0, it = strs; it; ++i, it = g_slist_next(it)) {
+        char *data;
+
+        if (utf8) {
+            if (g_utf8_validate(it->data, -1, NULL))
+                data = g_strdup(it->data);
+            else
+                data = g_strdup("");
+        }
+        else
+            data = g_locale_to_utf8(it->data, -1, NULL, NULL, NULL);
+
+        ret = append_string(ret, data, TRUE);
+        g_free(data);
+    }
+
+    while (strs) {
+        g_free(strs->data);
+        strs = g_slist_delete_link(strs, strs);
+    }
+    return ret;
+}
+
+gchar* read_atoms(Display *d, guchar *val, guint n)
+{
+    gchar *ret;
+    guint i;
+
+    ret = NULL;
+    for (i = 0; i < n; ++i)
+        ret = append_string(ret, XGetAtomName(d, ((guint32*)val)[i]), FALSE);
+    return ret;
+}
+
+gchar* read_numbers(guchar *val, guint n, guint size)
+{
+    gchar *ret;
+    guint i;
+
+    ret = NULL;
+    for (i = 0; i < n; ++i)
+        switch (size) {
+        case 8:
+            ret = append_int(ret, ((guint8*)val)[i]);
+            break;
+        case 16:
+            ret = append_int(ret, ((guint16*)val)[i]);
+            break;
+        case 32:
+            ret = append_int(ret, ((guint32*)val)[i]);
+            break;
+        default:
+            g_assert_not_reached(); /* unhandled size */
+        }
+
+    return ret;
+}
+
+gboolean read_prop(Display *d, Window w, Atom prop, const gchar **type, gchar **val)
+{
+    guchar *ret;
+    guint nret;
+    gint size;
+    Atom ret_type;
+
+    ret = NULL;
+    if (get_all(d, w, prop, &ret_type, &size, &ret, &nret)) {
+        *type = XGetAtomName(d, ret_type);
+
+        if (strcmp(*type, "STRING") == 0)
+            *val = read_strings((gchar*)ret, nret, FALSE);
+        else if (strcmp(*type, "UTF8_STRING") == 0)
+            *val = read_strings((gchar*)ret, nret, TRUE);
+        else if (strcmp(*type, "ATOM") == 0) {
+            g_assert(size == 32);
+            *val = read_atoms(d, ret, nret);
+        }
+       else
+            *val = read_numbers(ret, nret, size);
+
+        g_free(ret);
+        return TRUE;
+    }
+    return FALSE;
+}
+
+void show_properties(Display *d, Window w)
+{
+    Atom* props;
+    int i, n;
+
+    props = XListProperties(d, w, &n);
+
+    for (i = 0; i < n; ++i) {
+        const char *type;
+        char *name, *val;
+
+        name = XGetAtomName(d, props[i]);
+
+        if (read_prop(d, w, props[i], &type, &val)) {
+            g_print("%s(%s) = %s\n", name, type, val);
+            g_free(val);
+        }
+
+        XFree(name);
+    }
+
+    XFree(props);
+}
+
+int main(int argc, char **argv)
+{
+    Display *d;
+    Window id, userid = None;
+    int i;
+    char *dname = NULL;
+
+    for (i = 1; i < argc; ++i) {
+        if (!strcmp(argv[i], "--help")) {
+            return fail(0);
+        }
+        else if (!strcmp(argv[i], "--id")) {
+            if (++i == argc)
+                return fail(0);
+            if (argv[i][0] == '0' && argv[i][1] == 'x') {
+                /* hex */
+                userid = parse_hex(argv[i]+2);
+            }
+            else {
+                /* decimal */
+                userid = atoi(argv[i]);
+            }
+            break;
+        }
+        else if (!strcmp(argv[i], "--display")) {
+            if (++i == argc)
+                return fail(0);
+            dname = argv[i];
+        }
+    }
+
+    d = XOpenDisplay(dname);
+    if (!d) {
+        return fail("Unable to find an X display. "
+                    "Ensure you have permission to connect to the display.");
+    }
+
+    if (userid == None) {
+        i = XGrabPointer(d, RootWindow(d, DefaultScreen(d)),
+                         False, ButtonPressMask,
+                         GrabModeAsync, GrabModeAsync,
+                         None, XCreateFontCursor(d, XC_crosshair),
+                         CurrentTime);
+        if (i != GrabSuccess)
+            return fail("Unable to grab the pointer device");
+        while (1) {
+            XEvent ev;
+
+            XNextEvent(d, &ev);
+            if (ev.type == ButtonPress) {
+                XUngrabPointer(d, CurrentTime);
+                userid = ev.xbutton.subwindow;
+                break;
+            }
+        }
+    }
+
+    id = find_client(d, userid);
+
+    if (id == None)
+        return fail("Unable to find window with the requested ID");
+
+    show_properties(d, id);
+    
+    XCloseDisplay(d);
+
+    return 0;
+}

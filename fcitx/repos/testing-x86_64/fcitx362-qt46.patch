diff -Naur fcitx-3.6.2-orig/src/main.c fcitx-3.6.2/src/main.c
--- fcitx-3.6.2-orig/src/main.c	2009-05-26 11:54:49.000000000 -0400
+++ fcitx-3.6.2/src/main.c	2010-02-12 00:09:23.000000000 -0500
@@ -66,7 +66,7 @@
 #endif
 
 extern Display *dpy;
-extern Window   inputWindow;
+extern Window   mainWindow;
 
 extern Bool     bIsUtf8;
 
@@ -147,7 +148,7 @@
     CreateAboutWindow ();	//创建关于窗口
 
     //处理颜色，即候选词窗口的颜色，也就是我们在“~/.fcitx/config”定义的那些颜色信息
-    InitGC (inputWindow);
+    InitGC (mainWindow);
 
     //将本程序加入到输入法组，告诉系统，使用我输入字符
     SetIM ();
@@ -159,7 +160,7 @@
     }
     
     //初始化输入法
-    if (!InitXIM (inputWindow, imname))
+    if (!InitXIM (imname))
 	exit (4);
 
     //以后台方式运行
diff -Naur fcitx-3.6.2-orig/src/xim.c fcitx-3.6.2/src/xim.c
--- fcitx-3.6.2-orig/src/xim.c	2009-09-14 20:21:15.000000000 -0400
+++ fcitx-3.6.2/src/xim.c	2010-02-12 00:12:45.000000000 -0500
@@ -463,12 +463,20 @@
 	free (pS2T);
 }
 
-Bool InitXIM (Window im_window, char *imname)
+Bool InitXIM (char *imname)
 {
     XIMStyles      *input_styles;
     XIMTriggerKeys *on_keys;
     XIMEncodings   *encodings;
     char           *p;
+    Window	    im_window;
+ 
+    im_window = XCreateSimpleWindow(dpy, DefaultRootWindow(dpy), 0, 0, 1, 1, 1, 0, 0);
+    if (im_window == (Window)NULL) {
+      fprintf(stderr, "Can't Create imWindow\n");
+      exit(1);
+    }
+    XSelectInput(dpy, im_window, ExposureMask|ButtonPressMask|ButtonReleaseMask|ButtonMotionMask|VisibilityChangeMask);
 
     if ( !imname ) {
     	imname = getenv ("XMODIFIERS");
diff -Naur fcitx-3.6.2-orig/src/xim.h fcitx-3.6.2/src/xim.h
--- fcitx-3.6.2-orig/src/xim.h	2009-08-11 05:33:51.000000000 -0400
+++ fcitx-3.6.2/src/xim.h	2010-02-12 00:13:21.000000000 -0500
@@ -66,7 +66,7 @@
     position		pos;
 } CONNECT_ID;
 
-Bool            InitXIM (Window, char *);
+Bool            InitXIM (char *);
 void            SendHZtoClient (IMForwardEventStruct * call_data, char *strHZ);
 void            EnterChineseMode (Bool bState);
 void            CreateConnectID (IMOpenStruct * call_data);

# $Id$
# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>

pkgname=('geoip-database' 'geoip-database-extra')
pkgver=20161206
pkgrel=1
arch=('any')
url="https://dev.maxmind.com/geoip/legacy/geolite/"
license=('custom:OPEN DATA LICENSE')
checkdepends=('geoip')
source=(GeoIP-$pkgver.dat.gz::https://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz
        GeoIPv6-$pkgver.dat.gz::https://geolite.maxmind.com/download/geoip/database/GeoIPv6.dat.gz
        GeoLiteCity-$pkgver.dat.gz::https://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
        GeoLiteCityv6-$pkgver.dat.gz::https://geolite.maxmind.com/download/geoip/database/GeoLiteCityv6-beta/GeoLiteCityv6.dat.gz
        GeoIPASNum-$pkgver.dat.gz::https://download.maxmind.com/download/geoip/database/asnum/GeoIPASNum.dat.gz
        GeoIPASNumv6-$pkgver.dat.gz::https://download.maxmind.com/download/geoip/database/asnum/GeoIPASNumv6.dat.gz
        GeoIP-LICENSE.txt::https://geolite.maxmind.com/download/geoip/database/LICENSE.txt)
noextract=(GeoIP-$pkgver.dat.gz
           GeoIPv6-$pkgver.dat.gz
           GeoLiteCity-$pkgver.dat.gz
           GeoLiteCityv6-$pkgver.dat.gz
           GeoIPASNum-$pkgver.dat.gz
           GeoIPASNumv6-$pkgver.dat.gz)
sha256sums=('54166b91fd1eb941ad57b1c8971e26d535487b9289eeb5d27a16ffd06f507061'
            'a53bf361c3d2d178b3353f4f03e6bef046432e618718b72de3b73da962663112'
            'ca45874bfa4486b1b335d5f958d339567974878fba7c202b1df0ddc38755a0e2'
            'c1032d401bb9dc8436a41acbe70a8a65203e87281b5ba3a0f839220511d18d2c'
            '0b8783133276c6584fe7a28b49f97c536b837fabbdb58babe3cf593c86298d2a'
            '2b88334f42c9af789f74398617b1b0f893661795a3763df8889932e730e4b91b'
            '83a4cb82ef8953c0107886b49bc39fcf77590a222d30e778d48f5d92f5b5e383')

prepare() {
  cd "$srcdir"

  for _database_name in GeoIP GeoLiteCity GeoIPASNum; do
    gunzip -c $_database_name-$pkgver.dat.gz >${_database_name/GeoLite/GeoIP}.dat
    gunzip -c ${_database_name}v6-$pkgver.dat.gz >${_database_name/GeoLite/GeoIP}v6.dat
  done
}

check() {
  cd "$srcdir"

  if [[ $(geoiplookup -f GeoIP.dat 8.8.8.8) != *'US, United States' ]]; then
    error 'Unable to resolve IPv4 address to country.'
    return 1
  fi

  if [[ $(geoiplookup6 -f GeoIPv6.dat 2001:4860:4860::8888) != *'US, United States' ]]; then
    error 'Unable to resolve IPv6 address to country.'
    return 1
  fi

  if [[ $(geoiplookup -f GeoIPCity.dat 8.8.8.8) != *'US, CA, California'* ]]; then
    error 'Unable to resolve IPv4 address to city.'
    return 1
  fi

  if [[ $(geoiplookup6 -f GeoIPCityv6.dat 2001:4860:4860::8888) != *'US, N/A, N/A'* ]]; then
    error 'Unable to resolve IPv6 address to city.'
    return 1
  fi

  if [[ $(geoiplookup -f GeoIPASNum.dat 8.8.8.8) != *'AS15169 Google Inc.' ]]; then
    error 'Unable to resolve IPv4 address to ASN.'
    return 1
  fi

  if [[ $(geoiplookup6 -f GeoIPASNumv6.dat 2001:4860:4860::8888) != *'AS15169 Google Inc.' ]]; then
    error 'Unable to resolve IPv6 address to ASN.'
    return 1
  fi
}

package_geoip-database() {
  pkgdesc="GeoLite country geolocation database compiled by MaxMind"

  cd "$srcdir"

  install -d "$pkgdir/usr/share/GeoIP"
  install -m644 -t "$pkgdir/usr/share/GeoIP" GeoIP{,v6}.dat

  install -Dm644 GeoIP-LICENSE.txt "$pkgdir/usr/share/licenses/$pkgname/LICENSE.txt"
}

package_geoip-database-extra() {
  pkgdesc="GeoLite city/ASN geolocation databases compiled by MaxMind"

  cd "$srcdir"

  install -d "$pkgdir/usr/share/GeoIP"
  install -m644 -t "$pkgdir/usr/share/GeoIP" GeoIPCity{,v6}.dat GeoIPASNum{,v6}.dat

  install -Dm644 GeoIP-LICENSE.txt "$pkgdir/usr/share/licenses/$pkgname/LICENSE.txt"
}

# vim:set ts=2 sw=2 et:

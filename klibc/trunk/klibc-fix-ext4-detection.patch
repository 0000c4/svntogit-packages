--- klibc-1.5.14.orig/usr/kinit/fstype/fstype.c	2008-07-30 23:06:03.000000000 +0200
+++ klibc-1.5.14/usr/kinit/fstype/fstype.c	2008-12-30 00:59:40.000000000 +0100
@@ -115,17 +115,14 @@
 	const struct ext3_super_block *sb =
 		(const struct ext3_super_block *)buf;
 
-	/* ext4dev needs ext2 + journal + test_fs flag + one !ext3 feature */
+	/* ext4 needs ext2 + journal + one !ext3 feature */
 	if (sb->s_magic == __cpu_to_le16(EXT2_SUPER_MAGIC)
 		&& (sb->s_feature_compat
 		& __cpu_to_le32(EXT3_FEATURE_COMPAT_HAS_JOURNAL))
-		&& (sb->s_flags & __cpu_to_le32(EXT2_FLAGS_TEST_FILESYS))
-		&& (sb->s_feature_incompat
-		& __cpu_to_le32(EXT3_FEATURE_RO_COMPAT_SUPP)
+		&& (sb->s_feature_ro_compat
+		& __cpu_to_le32(EXT3_FEATURE_RO_COMPAT_UNSUPPORTED)
 		|| sb->s_feature_incompat
-		& __cpu_to_le32(EXT3_FEATURE_INCOMPAT_UNSUPPORTED)
-		|| sb->s_feature_incompat
-		& __cpu_to_le32(EXT4_FEATURE_INCOMPAT_MMP))) {
+		& __cpu_to_le32(EXT3_FEATURE_INCOMPAT_UNSUPPORTED))) {
 		*bytes = (unsigned long long)__le32_to_cpu(sb->s_blocks_count)
 		    << (10 + __le32_to_cpu(sb->s_log_block_size));
 		return 1;
@@ -370,7 +367,7 @@
 	{0, "romfs", romfs_image},
 	{0, "xfs", xfs_image},
 	{0, "squashfs", squashfs_image},
-	{1, "ext4dev", ext4_image},
+	{1, "ext4", ext4_image},
 	{1, "ext3", ext3_image},
 	{1, "ext2", ext2_image},
 	{1, "minix", minix_image},

diff --git a/WebCore/ChangeLog b/WebCore/ChangeLog
index 1e508d4..b5a0feb 100644
--- a/WebCore/ChangeLog
+++ b/WebCore/ChangeLog
@@ -1,3 +1,72 @@
+2010-07-12  Tony Chang  <tony@chromium.org>
+
+        Reviewed by David Hyatt.
+
+        crash in FrameView::detachCustomScrollbars
+        https://bugs.webkit.org/show_bug.cgi?id=41196
+
+        Test: scrollbars/hidden-iframe-scrollbar-crash.html
+
+        * page/FrameView.cpp:
+        (WebCore::FrameView::detachCustomScrollbars):
+
+2010-07-02  Ojan Vafai  <ojan@chromium.org>
+
+        Reviewed by Adam Barth.
+
+        Crash in RenderObject::containingBlock when clearing selection in a display:none node.
+        https://bugs.webkit.org/show_bug.cgi?id=41523
+
+        updateStyleIfNeeded before clearing the selection in the RenderView. Otherwise,
+        m_selectionStart and m_selectionEnd in RenderView point to garbage object.
+        This fixes the crash because updateStyleIfNeeded clears the selection before
+        clobbering nodes that contain the selection.
+
+        Test: editing/selection/crash-on-clear-selection.html
+
+        * editing/SelectionController.cpp:
+        (WebCore::SelectionController::updateAppearance):
+
+2010-06-23  Abhishek Arya  <inferno@chromium.org>
+
+        Reviewed by Kenneth Rohde Christiansen.
+
+        Firing the onchange event on select which changes its size > 1 causes the select
+        object to change from a menulist to a listbox. However, when propogating the events,
+        we do a bad cast assuming the object will remain a menulist. Added proper checks to
+        make sure we check the renderer after the onchange is fired and propogate the event
+        based on correct object type.
+        https://bugs.webkit.org/show_bug.cgi?id=40828 
+
+        Test: fast/events/select-onchange-crash.html
+
+        * dom/SelectElement.cpp:
+        (WebCore::SelectElement::setSelectedIndex):
+
+2010-07-21  Justin Schuh  <jschuh@chromium.org>
+
+        Reviewed by Oliver Hunt.
+
+        Prevent DeleteButtonController enable state from changing when not editing
+        https://bugs.webkit.org/show_bug.cgi?id=42659
+
+        Test: svg/custom/use-invalid-html.xhtml
+
+        * dom/ContainerNode.cpp:
+        (WebCore::ContainerNode::cloneChildNodes):
+
+2010-06-10  Tony Chang  <tony@chromium.org>
+
+        Reviewed by Kent Tamura.
+
+        crash when focus is changed while trying to focus next element
+        https://bugs.webkit.org/show_bug.cgi?id=40407
+
+        Test: fast/events/focus-change-crash.html
+
+        * dom/Element.cpp:
+        (WebCore::Element::focus):
+
 2010-08-10  Abhishek Arya  <inferno@chromium.org>
 
         Reviewed by David Hyatt.
diff --git a/WebCore/dom/SelectElement.cpp b/WebCore/dom/SelectElement.cpp
index 0096627..95f6ac6 100644
--- a/WebCore/dom/SelectElement.cpp
+++ b/WebCore/dom/SelectElement.cpp
@@ -342,8 +342,13 @@ void SelectElement::setSelectedIndex(SelectElementData& data, Element* element,
         data.setUserDrivenChange(userDrivenChange);
         if (fireOnChangeNow)
             menuListOnChange(data, element);
-        if (RenderMenuList* menuList = toRenderMenuList(element->renderer()))
-            menuList->didSetSelectedIndex();
+        RenderObject* renderer = element->renderer();
+        if (renderer) {
+            if (data.usesMenuList())
+                toRenderMenuList(renderer)->didSetSelectedIndex();
+            else if (renderer->isListBox())
+                toRenderListBox(renderer)->selectionChanged();
+        }
     }
 
     if (Frame* frame = element->document()->frame())
diff --git a/WebCore/editing/SelectionController.cpp b/WebCore/editing/SelectionController.cpp
index 38a6e7b..b365d1d 100644
--- a/WebCore/editing/SelectionController.cpp
+++ b/WebCore/editing/SelectionController.cpp
@@ -1389,6 +1389,9 @@ void SelectionController::updateAppearance()
     }
 #endif
 
+    // We need to update style in case the node containing the selection is made display:none.
+    m_frame->document()->updateStyleIfNeeded();
+
     RenderView* view = m_frame->contentRenderer();
     if (!view)
         return;
diff --git a/WebCore/page/FrameView.cpp b/WebCore/page/FrameView.cpp
index d38f655..8b82fc3 100644
--- a/WebCore/page/FrameView.cpp
+++ b/WebCore/page/FrameView.cpp
@@ -260,11 +260,11 @@ void FrameView::detachCustomScrollbars()
         return;
 
     Scrollbar* horizontalBar = horizontalScrollbar();
-    if (horizontalBar && horizontalBar->isCustomScrollbar() && !toRenderScrollbar(horizontalBar)->owningRenderer()->isRenderPart())
+    if (horizontalBar && horizontalBar->isCustomScrollbar())
         setHasHorizontalScrollbar(false);
 
     Scrollbar* verticalBar = verticalScrollbar();
-    if (verticalBar && verticalBar->isCustomScrollbar() && !toRenderScrollbar(verticalBar)->owningRenderer()->isRenderPart())
+    if (verticalBar && verticalBar->isCustomScrollbar())
         setHasVerticalScrollbar(false);
 
     if (m_scrollCorner) {
diff --git a/WebKit/gtk/NEWS b/WebKit/gtk/NEWS
index ff703f4..2316057 100644
--- a/WebKit/gtk/NEWS
+++ b/WebKit/gtk/NEWS
@@ -1,4 +1,18 @@
 ================
+WebKitGTK+ 1.2.5
+================
+
+What's new in WebKitGTK+ 1.2.5?
+
+  - New stable release, API and ABI compatible with previous 1.2.x
+    versions;
+  - The patches to fix the following CVEs are included with help from
+    Vincent Danen and other members of the Red Hat security team:
+
+      CVE-2010-1780 CVE-2010-3113 CVE-2010-1814 CVE-2010-1812
+      CVE-2010-1815
+
+================
 WebKitGTK+ 1.2.4
 ================
 
@@ -13,6 +27,9 @@ What's new in WebKitGTK+ 1.2.4?
       CVE-2010-1786 CVE-2010-1787 CVE-2010-1788 CVE-2010-1790
       CVE-2010-1792 CVE-2010-1793 CVE-2010-2648
 
+  Update: CVE-2010-2647 was also addressed in this release, but failed
+  to be listed at release time.
+
 ================
 WebKitGTK+ 1.2.3
 ================

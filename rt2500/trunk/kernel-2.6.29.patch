--- Module/rtmp_main.c~	2009-03-25 10:37:07.000000000 +0100
+++ Module/rtmp_main.c	2009-03-25 10:37:07.000000000 +0100
@@ -272,7 +272,7 @@
 
     // Save CSR virtual address and irq to device structure
     net_dev->base_addr = (unsigned long)csr_addr;
-    pAd = net_dev->priv;
+    pAd = netdev_priv(net_dev);
     pAd->CSRBaseAddress = net_dev->base_addr;
     pAd->net_dev = net_dev;
 
@@ -369,7 +369,7 @@
 INT RT2500_open(
     IN  struct net_device *net_dev)
 {
-    PRTMP_ADAPTER   pAd = net_dev->priv;
+    PRTMP_ADAPTER   pAd = netdev_priv(net_dev);
     INT             status = NDIS_STATUS_SUCCESS;
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,5,0)
@@ -491,7 +491,7 @@
     IN  struct net_device *net_dev)
 {
     NDIS_STATUS     Status = NDIS_STATUS_SUCCESS;
-    PRTMP_ADAPTER   pAdapter = net_dev->priv;
+    PRTMP_ADAPTER   pAdapter = netdev_priv(net_dev);
 
     DBGPRINT(RT_DEBUG_INFO, "<==== RTMPSendPackets\n");
 
@@ -576,7 +576,7 @@
 #endif
 {
     struct net_device   *net_dev = dev_instance;
-    PRTMP_ADAPTER       pAdapter = net_dev->priv;
+    PRTMP_ADAPTER       pAdapter = netdev_priv(net_dev);
     INTSRC_STRUC        IntSource;
     int         ret = 0;
 
@@ -689,7 +689,7 @@
 
 int rt2500_set_mac_address(struct net_device *net_dev, void *addr)
 {
-	RTMP_ADAPTER		*pAd = net_dev->priv;
+	RTMP_ADAPTER		*pAd = netdev_priv(net_dev);
 	struct sockaddr		*mac = (struct sockaddr*) addr;
 	u32			set_mac;
 
@@ -747,7 +747,7 @@
 struct iw_statistics *RT2500_get_wireless_stats(
     IN  struct net_device *net_dev)
 {
-    RTMP_ADAPTER *pAd = net_dev->priv;
+    RTMP_ADAPTER *pAd = netdev_priv(net_dev);
 
     // TODO: All elements are zero before be implemented
 
@@ -789,7 +789,7 @@
 struct net_device_stats *RT2500_get_ether_stats(
     IN  struct net_device *net_dev)
 {
-    RTMP_ADAPTER *pAd = net_dev->priv;
+    RTMP_ADAPTER *pAd = netdev_priv(net_dev);
 
     DBGPRINT(RT_DEBUG_INFO, "RT2500_get_ether_stats --->\n");
 
@@ -849,7 +849,7 @@
     IN  struct net_device *net_dev)
 {
     RTMP_ADAPTER *pAd;
-    pAd = net_dev->priv;
+    pAd = netdev_priv(net_dev);
     if (pAd->PortCfg.BssType == BSS_MONITOR)
     {
         RTMP_IO_WRITE32(pAd, RXCSR0, 0x46);
@@ -876,7 +876,7 @@
 INT RT2500_close(
     IN  struct net_device *net_dev)
 {
-    RTMP_ADAPTER    *pAd = net_dev->priv;
+    RTMP_ADAPTER    *pAd = netdev_priv(net_dev);
     // LONG            ioaddr = net_dev->base_addr;
 
     DBGPRINT(RT_DEBUG_TRACE, "%s: ===> RT2500_close\n", net_dev->name);
@@ -930,7 +930,7 @@
 	rt2500pci_close_debugfs(pAd);
 
     // Free Ring buffers
-    RTMPFreeDMAMemory(net_dev->priv);
+    RTMPFreeDMAMemory(netdev_priv(net_dev));
 
     // Unregister network device
     unregister_netdev(net_dev);
@@ -970,7 +970,7 @@
 static int rt2500_suspend(struct pci_dev *pdev, pm_message_t state)
 {
     struct net_device *dev = pci_get_drvdata(pdev);
-    PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+    PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) netdev_priv(dev);
 
 
     if(pAdapter->PortCfg.bRadio)
@@ -1001,7 +1001,7 @@
 static int rt2500_resume(struct pci_dev *pdev)
 {
     struct net_device *dev = pci_get_drvdata(pdev);
-    PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+    PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) netdev_priv(dev);
     int status;
 
 	// FIXME: code should process error case correctly
--- Module/rtmp_init.c~	2009-03-25 10:55:00.000000000 +0100
+++ Module/rtmp_init.c	2009-03-25 10:55:00.000000000 +0100
@@ -1406,9 +1406,8 @@
 
     // Save uid and gid used for filesystem access.
     // Set user and group to 0 (root)
-    orgfsuid = current->fsuid;
-    orgfsgid = current->fsgid;
-    current->fsuid=current->fsgid = 0;
+    orgfsuid = current_fsuid();
+    orgfsgid = current_fsgid();
     orgfs = get_fs();
     set_fs(KERNEL_DS);
 
@@ -1983,9 +1982,11 @@
         }
     } //if (src && *src)
 
-    set_fs(orgfs);
-    current->fsuid = orgfsuid;
-    current->fsgid = orgfsgid;
+    set_fs(orgfs);
+#if 0
+       current->cred->fsuid = orgfsuid;
+       current->cred->fsgid = orgfsgid;
+#endif
     kfree(buffer);
 }
 /*
--- Module/rtmp_info.c~	2009-03-25 10:59:09.000000000 +0100
+++ Module/rtmp_info.c	2009-03-25 10:59:09.000000000 +0100
@@ -235,7 +235,7 @@
 		   struct iw_request_info *info,
 		   struct iw_point *data, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) netdev_priv(dev);
 	struct iw_range *range = (struct iw_range *) extra;
 	u16 val;
 	int i,chan;
@@ -344,7 +344,7 @@
 rt_ioctl_setparam(struct net_device *dev, struct iw_request_info *info,
 			 void *w, char *extra)
 {
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) netdev_priv(dev);
 	char *this_char;
 	char *value;
 	int  Status;
@@ -392,7 +392,7 @@
 			struct iw_point *data, char *extra)
 {
 	ULONG								Now;
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) netdev_priv(dev);
 	int Status = NDIS_STATUS_SUCCESS;
 	BOOLEAN 		StateMachineTouched = FALSE;
 
@@ -452,7 +452,7 @@
 			struct iw_point *data, char *extra)
 {
 
-	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) dev->priv;
+	PRTMP_ADAPTER pAdapter = (PRTMP_ADAPTER) netdev_priv(dev);
 	int i=2, j;
 	char *current_ev = extra;
 	char *end_buf = extra + IW_SCAN_MAX_DATA;
@@ -1653,7 +1653,7 @@
     IN  OUT struct ifreq    *rq,
     IN  INT                 cmd)
 {
-    PRTMP_ADAPTER                       pAdapter= net_dev->priv;
+    PRTMP_ADAPTER                       pAdapter= netdev_priv(net_dev);
     struct iwreq                        *wrq = (struct iwreq *) rq;
     struct iw_point                     *erq = NULL;
     struct iw_freq                      *frq = NULL;

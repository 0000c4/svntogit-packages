From 8147a06b45ef4fc6983454b63fe81a460f761593 Mon Sep 17 00:00:00 2001
Message-Id: <8147a06b45ef4fc6983454b63fe81a460f761593.1513877605.git.jan.steffens@gmail.com>
From: "Jan Alexander Steffens (heftig)" <jan.steffens@gmail.com>
Date: Thu, 21 Dec 2017 18:22:55 +0100
Subject: [PATCH] shared/compat: fix memory handling of
 nm_setting_vpn_get_*_keys (v2)

The compat implementations return a (transfer none) strv instead of a
(transfer container) one. This has caused double frees in nm-applet:
https://bugs.archlinux.org/task/56772

We still need to copy the keys because nm_setting_vpn_foreach_* provides
us with copies that are freed after the iteration.

Fix this by handing out a duplicate of the array. Also simplify the
function a bit by caching the entire GPtrArray object and not just the
array itself.

Fixes: 272439cb2077a889485dd195bb6b99ca91d3e3bf
---
 shared/nm-utils/nm-compat.c | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/shared/nm-utils/nm-compat.c b/shared/nm-utils/nm-compat.c
index 22ab675de8373639..2b747c700478a205 100644
--- a/shared/nm-utils/nm-compat.c
+++ b/shared/nm-utils/nm-compat.c
@@ -38,34 +38,32 @@ _get_keys (NMSettingVpn *setting,
            gboolean is_secrets,
            guint *out_length)
 {
-	guint len;
 	const char **keys = NULL;
 	gs_unref_ptrarray GPtrArray *a = NULL;
 
 	nm_assert (NM_IS_SETTING_VPN (setting));
 
 	a = g_ptr_array_new ();
 	if (is_secrets)
 		nm_setting_vpn_foreach_secret (setting, _get_keys_cb, a);
 	else
 		nm_setting_vpn_foreach_data_item (setting, _get_keys_cb, a);
-	len = a->len;
 
 	if (a->len) {
 		g_ptr_array_sort (a, nm_strcmp_p);
 		g_ptr_array_add (a, NULL);
-		keys = (const char **) g_ptr_array_free (g_steal_pointer (&a), FALSE);
+		keys = g_memdup (a->pdata, sizeof (gpointer) * a->len);
 
 		/* we need to cache the keys *somewhere*. */
 		g_object_set_qdata_full (G_OBJECT (setting),
 		                         is_secrets
 		                         ? NM_CACHED_QUARK ("libnm._nm_setting_vpn_get_secret_keys")
 		                         : NM_CACHED_QUARK ("libnm._nm_setting_vpn_get_data_keys"),
-		                         keys,
-		                         (GDestroyNotify) g_strfreev);
+		                         g_ptr_array_ref (a),
+		                         (GDestroyNotify) g_ptr_array_unref);
 	}
 
-	NM_SET_OUT (out_length, len);
+	NM_SET_OUT (out_length, a->len);
 	return keys;
 }
 
-- 
2.15.1


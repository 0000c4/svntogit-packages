From 0f8b5572de64a3e1a68d20975dffffadd6452c9a Mon Sep 17 00:00:00 2001
From: "Jan Alexander Steffens (heftig)" <jan.steffens@gmail.com>
Date: Fri, 13 Jan 2017 00:21:52 +0100
Subject: [PATCH] Unbreak sqlite on Python 3.6

Py3.6 changed the transaction behavior; DDL commands like PRAGMA do not
commit open transactions anymore, and since the default for execute() is
to auto-open a transaction, setting the journal_mode fails.

Changing the isolation_level to None so that transactions aren't opened
anymore is a possible workaround. However, using executescript() seems
like a better idea; it always commits any open transaction first.
---
 engine/tabsqlitedb.py | 42 ++++++++++++++++++++++--------------------
 1 file changed, 22 insertions(+), 20 deletions(-)

diff --git a/engine/tabsqlitedb.py b/engine/tabsqlitedb.py
index 4ff7f020ecf9dd40..beac0f82ce3ea885 100755
--- a/engine/tabsqlitedb.py
+++ b/engine/tabsqlitedb.py
@@ -205,16 +205,17 @@ class tabsqlitedb:
                 "Connect to the database %(name)s.\n"
                 %{'name': self.user_db_file})
             self.db = sqlite3.connect(self.user_db_file)
-            self.db.execute('PRAGMA encoding = "UTF-8";')
-            self.db.execute('PRAGMA case_sensitive_like = true;')
-            self.db.execute('PRAGMA page_size = 4096; ')
-            self.db.execute('PRAGMA cache_size = 20000;')
-            self.db.execute('PRAGMA temp_store = MEMORY;')
-            self.db.execute('PRAGMA journal_mode = WAL;')
-            self.db.execute('PRAGMA journal_size_limit = 1000000;')
-            self.db.execute('PRAGMA synchronous = NORMAL;')
-            self.db.execute('ATTACH DATABASE "%s" AS user_db;'
-                            % self.user_db_file)
+            self.db.executescript('''
+                PRAGMA encoding = "UTF-8";
+                PRAGMA case_sensitive_like = true;
+                PRAGMA page_size = 4096;
+                PRAGMA cache_size = 20000;
+                PRAGMA temp_store = MEMORY;
+                PRAGMA journal_mode = WAL;
+                PRAGMA journal_size_limit = 1000000;
+                PRAGMA synchronous = NORMAL;
+                ATTACH DATABASE "%s" AS user_db;
+            ''' % self.user_db_file)
         except:
             sys.stderr.write(
                 "Could not open the database %(name)s.\n"
@@ -236,16 +237,17 @@ class tabsqlitedb:
                 %{'name': self.user_db_file})
             self.init_user_db()
             self.db = sqlite3.connect(self.user_db_file)
-            self.db.execute('PRAGMA encoding = "UTF-8";')
-            self.db.execute('PRAGMA case_sensitive_like = true;')
-            self.db.execute('PRAGMA page_size = 4096; ')
-            self.db.execute('PRAGMA cache_size = 20000;')
-            self.db.execute('PRAGMA temp_store = MEMORY;')
-            self.db.execute('PRAGMA journal_mode = WAL;')
-            self.db.execute('PRAGMA journal_size_limit = 1000000;')
-            self.db.execute('PRAGMA synchronous = NORMAL;')
-            self.db.execute('ATTACH DATABASE "%s" AS user_db;'
-                            % self.user_db_file)
+            self.db.executescript('''
+                PRAGMA encoding = "UTF-8";
+                PRAGMA case_sensitive_like = true;
+                PRAGMA page_size = 4096;
+                PRAGMA cache_size = 20000;
+                PRAGMA temp_store = MEMORY;
+                PRAGMA journal_mode = WAL;
+                PRAGMA journal_size_limit = 1000000;
+                PRAGMA synchronous = NORMAL;
+                ATTACH DATABASE "%s" AS user_db;
+            ''' % self.user_db_file)
         self.create_tables()
         if self.old_phrases:
             sqlargs = []
-- 
2.11.0

